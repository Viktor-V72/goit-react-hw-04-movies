{"version":3,"sources":["Components/MovieGallery/MovieGallery.module.css","Components/apiService/apiService.jsx","Components/MovieGallery/MovieGallery.jsx","Components/Searchbar/Searchbar.module.css","Components/Searchbar/Searchbar.jsx","views/MoviesPage.jsx"],"names":["module","exports","Api_Key","fetchTrends","axios","get","then","response","data","catch","console","error","searchMovies","searchQuery","searchDetails","movieId","withRouter","movies","location","className","styles","MovieGallery","map","poster_path","id","name","title","MovieGalleryItem","to","pathname","state","from","src","alt","MovieGalleryItem_image","Searchbar","query","handleChange","e","setState","currentTarget","value","handleSubmit","preventDefault","props","onSearch","SearchForm","onSubmit","this","SearchForm_button","type","SearchForm_button_label","SearchForm_input","onChange","autoComplete","autoFocus","placeholder","Component","MoviesPage","onChangeQuery","history","images","push","fetchMovies","results","prevProps","prevState"],"mappings":"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","file":"static/js/movies-view.0ef47c7f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"MovieGallery\":\"MovieGallery_MovieGallery__K4wk3\",\"MovieGalleryItem\":\"MovieGallery_MovieGalleryItem__3YkGV\",\"MovieGalleryItem_image\":\"MovieGallery_MovieGalleryItem_image__3SJS4\",\"title\":\"MovieGallery_title__2GDzB\",\"title_head\":\"MovieGallery_title_head__3t2gk\"};","import axios from 'axios';\n\nconst Api_Key = '0e6eebd27dfd68a7c4ec96f04756cc6c';\n\nconst fetchTrends = () => {\n  return axios\n    .get(`https://api.themoviedb.org/3/trending/movie/day?api_key=${Api_Key}`)\n    .then(response => response.data)\n    .catch(console.error);\n};\n\nconst searchMovies = searchQuery => {\n  return axios\n    .get(\n      `https://api.themoviedb.org/3/search/movie?api_key=${Api_Key}&query=${searchQuery}&language=en-US&page=1&include_adult=false`,\n    )\n    .then(response => response.data)\n    .catch(console.error);\n};\n\nconst searchDetails = movieId => {\n  return axios\n    .get(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=${Api_Key}&language=en-US`,\n    )\n    .then(response => response.data)\n    .catch(console.error);\n};\n\nexport { fetchTrends, searchMovies, searchDetails };\n","import PropTypes from 'prop-types';\nimport { Link, withRouter } from 'react-router-dom';\nimport styles from './MovieGallery.module.css';\n\nconst imgUrl = 'https://www.themoviedb.org/t/p/w220_and_h330_face';\n\nconst MovieGallery = ({ movies, location }) => (\n  <ul className={styles.MovieGallery}>\n    {movies.map(({ poster_path, id, name, title }) => (\n      <li key={id} className={styles.MovieGalleryItem}>\n        <Link\n          to={{\n            pathname: `movies/${id}`,\n            state: { from: location },\n          }}\n        >\n          <img\n            src={imgUrl + poster_path}\n            alt=\"\"\n            className={styles.MovieGalleryItem_image}\n          />\n        </Link>\n        <h2 className={styles.title}>{name || title}</h2>\n      </li>\n    ))}\n  </ul>\n);\n\nMovieGallery.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      poster_path: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n    }),\n  ),\n  location: PropTypes.object.isRequired,\n};\n\nexport default withRouter(MovieGallery);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__TSIK7\",\"SearchForm\":\"Searchbar_SearchForm__3ae6A\",\"SearchForm_button\":\"Searchbar_SearchForm_button__1mrqK\",\"SearchForm_button_label\":\"Searchbar_SearchForm_button_label__2FYhi\",\"SearchForm_input\":\"Searchbar_SearchForm_input__18jHb\"};","import React, { Component } from 'react';\nimport styles from './Searchbar.module.css';\n\nclass Searchbar extends Component {\n  state = { query: '' };\n\n  handleChange = e => {\n    this.setState({ query: e.currentTarget.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onSearch(this.state.query);\n    this.setState({ query: '' });\n  };\n\n  render() {\n    return (\n      <header className={styles.Searchbar}>\n        <form className={styles.SearchForm} onSubmit={this.handleSubmit}>\n          <button className={styles.SearchForm_button} type=\"submit\">\n            <span className={styles.SearchForm_button_label}>Search</span>\n          </button>\n          <input\n            className={styles.SearchForm_input}\n            type=\"text\"\n            value={this.state.query}\n            onChange={this.handleChange}\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search movies\"\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nexport default Searchbar;\n","import { Component } from 'react';\nimport { searchMovies } from '../Components/apiService/apiService';\nimport Searchbar from '../Components/Searchbar/Searchbar';\nimport MovieGallery from '../Components/MovieGallery/MovieGallery';\n\nclass MoviesPage extends Component {\n  state = { movies: [], searchQuery: '' };\n\n  componentDidMount() {\n    if (this.props.location.query) {\n      searchMovies(this.props.location.query).then(data =>\n        this.setState({ movies: data.results }),\n      );\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.searchQuery !== this.state.searchQuery) {\n      this.fetchMovies();\n    }\n  }\n\n  onChangeQuery = query => {\n    const { history } = this.props;\n    this.setState({\n      searchQuery: query,\n      images: [],\n      error: null,\n    });\n    history.push({\n      query: query,\n    });\n  };\n\n  fetchMovies = () => {\n    const { searchQuery } = this.state;\n\n    searchMovies(searchQuery).then(data =>\n      this.setState({ movies: data.results }),\n    );\n  };\n\n  render() {\n    return (\n      <>\n        <Searchbar onSearch={this.onChangeQuery} />\n\n        <MovieGallery movies={this.state.movies} />\n      </>\n    );\n  }\n}\n\nexport default MoviesPage;\n"],"sourceRoot":""}